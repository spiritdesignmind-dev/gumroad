<div class="card">
  <div>
    <h3>
      <%= payment.displayed_amount %>
      to
      <%= link_to_unless_current h(user_name(payment.user)), admin_user_url(payment.user) %>
    </h3>
    <%= format_datetime_with_relative_tooltip(payment.created_at) %>
  </div>
  <hr>
  <div>
    <dl>
      <dt>ID</dt>
      <dd><%= link_to(payment.id, admin_payout_path(payment)) %></dd>

      <dt>Processor</dt>
      <dd><%= payment.processor %></dd>

      <dt>Payout period end date</dt>
      <dd><%= payment.payout_period_end_date ? payment.payout_period_end_date.to_fs(:formatted_date_full_month) : "None" %></dd>

      <dt>Fee</dt>
      <dd><%= Money.new(payment.processor_fee_cents).format(no_cents_if_whole: true, symbol: true) %></dd>

      <dt>State</dt>
      <dd><%= payment.state %></dd>

      <% if payment.processor == PayoutProcessorType::STRIPE %>
        <dt>Stripe Transfer ID</dt>
        <dd><%= link_to(payment.stripe_transfer_id, StripeUrl.transfer_url(payment.stripe_transfer_id, account_id: payment.stripe_connect_account_id)) %></dd>

        <dt>Stripe Account ID</dt>
        <dd><%= link_to(payment.stripe_connect_account_id, StripeUrl.connected_account_url(payment.stripe_connect_account_id)) %></dd>
      <% end %>

      <% if payment.failed? %>
        <dt>Failure reason</dt>
        <dd><%= payment.humanized_failure_reason %></dd>
      <% end %>

      <% if payment.bank_account %>
        <dt>Account holder's name</dt>
        <dd><%= payment.bank_account.account_holder_full_name %></dd>

        <dt>Account</dt>
        <dd><%= payment.bank_account.formatted_account %></dd>

      <% else %>
        <dt>PayPal email</dt>
        <dd><%= payment.payment_address %></dd>

        <dt>PayPal Transaction ID</dt>
        <dd><%= payment.txn_id %></dd>

        <dt>PayPal Correlation ID</dt>
        <dd><%= payment.correlation_id %></dd>

        <% if payment.was_created_in_split_mode %>
          <dt>Split payment info</dt>
          <dd>
            <pre><% payment.split_payments_info.each do |payment_info| %>
<%= JSON.pretty_generate(payment_info) %><% end %></pre>
          </dd>
        <% end %>
      <% end %>
    </dl>
  </div>
  <hr>
  <div style="display: grid; gap: var(--spacer-2); grid-template-columns: repeat(auto-fit, minmax(var(--dynamic-grid), max-content));">
    <% if payment.cancelled? || payment.failed? || payment.returned? %>
      <%= admin_action label: "Retry", url: retry_admin_payout_path(payment), confirm_message: "Are you sure you want to retry this payment?", loading: "Retrying...", done: "Retried.", success_message: "Retried." %>
    <% elsif payment.processing? && (payment.created_at <= 2.days.ago) %>
      <%= admin_action label: "Mark failed", url: fail_admin_payout_path(payment), confirm_message: "Are you sure you want to mark this payment as failed?", done: "Mark failed" %>
    <% elsif payment.unclaimed? %>
      <%= admin_action label: "Mark cancelled", url: cancel_admin_payout_path(payment), loading: "Cancelling...", done: "Cancelled!",
          confirm_message: "NOTE: This action should only be taken after the transaction has been cancelled in the PayPal dashboard. Are you sure you want to mark this payment as cancelled?" %>
    <% end %>
    <% if payment.processor == PayoutProcessorType::PAYPAL && Payment::NON_TERMINAL_STATES.include?(payment.state) %>
      <%= admin_action label: "Sync with PayPal", url: sync_admin_payout_path(payment), done: "Synced!",
          confirm_message: "Are you sure you want to try and sync this payment with PayPal?" %>
      <%= admin_action label: "Sync ALL stuck PayPal payouts", url: sync_all_admin_user_payouts_path(payment), done: "Enqueued!",
          confirm_message: "We will enqueue a job to sync ALL stuck PayPal payouts. Do you want to continue?" %>
    <% end %>
  </div>
</div>
